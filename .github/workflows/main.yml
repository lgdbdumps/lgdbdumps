name: LGDB

on: 
  workflow_dispatch:
  schedule:
    - cron: '30 04 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: environment settings
        run: |
            echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
            echo "COMPACT_URL=https://libgen.rs/dbdumps/libgen_compact.rar" >> $GITHUB_ENV
            echo "MAIN_URL=https://libgen.rs/dbdumps/libgen.rar" >> $GITHUB_ENV
            echo "COMPACT_FILENAME=libgen_compact_$(date -I).rar" >> $GITHUB_ENV
            echo "MAIN_FILENAME=libgen_$(date -I).rar" >> $GITHUB_ENV
            echo "UA=UA=Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/96.0.4664.45Safari/537.36" >> $GITHUB_ENV
            echo "MAIN_CSV_OUTPUT=main_csv_output" >> $GITHUB_ENV
            echo "COMPACT_CSV_OUTPUT=compact_csv_output" >> $GITHUB_ENV
            echo "WEB_PAGE_OUTPUT_FILE=output.html" >> $GITHUB_ENV
            echo "WEB_PAGE_CIDS_OUTPUT_FILE=pages_output_cids" >> $GITHUB_ENV
            echo "IPNS_HASH_OUTPUT_FILE=ipns_output" >> $GITHUB_ENV
        
      - name: get
        run: |
            wget -U "${{ env.UA }}" -O "${{ env.COMPACT_FILENAME }}" "${{ env.COMPACT_URL }}"
            echo "COMPACT_SIZE=$( ls -lh "${{ env.COMPACT_FILENAME }}" | tr -s [:blank:] | cut -d ' ' -f5 )" >> $GITHUB_ENV
            wget -U "${{ env.UA }}" -O "${{ env.MAIN_FILENAME }}" "${{ env.MAIN_URL }}"
            echo "MAIN_SIZE=$( ls -lh "${{ env.MAIN_FILENAME }}" | tr -s [:blank:] | cut -d ' ' -f5 )" >> $GITHUB_ENV
        
      - name: web3 upload
        uses: web3-storage/add-to-web3@v1
        id: compact
        with:
          web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
          path_to_add: "${{ env.COMPACT_FILENAME }}"
        
      - name: write compact csv output
        run: printf "%s,%s,%s\n" "${{ env.COMPACT_FILENAME }}" "$(date -I)" "${{ env.COMPACT_SIZE }}" "${{ steps.web3.outputs.cid }}" >> "${{ env.COMPACT_CSV_OUTPUT }}"
        
      - name: web3 upload
        uses: web3-storage/add-to-web3@v1
        id: main
        with:
          web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
          path_to_add: "${{ env.MAIN_FILENAME }}"
        
      - name: write main csv output
        run: printf "%s,%s,%s\n" "${{ env.MAIN_FILENAME }}" "$(date -I)" "${{ env.MAIN_SIZE }}" "${{ steps.web3.outputs.cid }}" >> "${{ env.MAIN_CSV_OUTPUT }}"
        
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: run python script
        run: python write_html
        
      - name: IPFS Setup Action
        uses: ibnesayeed/setup-ipfs@0.6.0
        with:        
          run_daemon: true
        
      - name: Run a script
        run: |
          cid="$(ipfs add -Q "${{ env.WEB_PAGE_OUTPUT_FILE }}" )"
          printf "%s,%s\n" "$(date -I) "/ipfs/""$cid" | tee -a "${{ env.WEB_PAGE_CIDS_OUTPUT_FILE }}"
          echo "/ipns/""$(ipfs name publish -Q "$cid" )" | tee IPNS_HASH_OUTPUT_FILE
        
      - name: Upload to IPFS
        uses: aquiladev/ipfs-action@v0.1.6
        with:  
          path: "${{ env.WEB_PAGE_OUTPUT_FILE }}"
          service: infura
      - name: update readme
        run: printf "To go to the dbdumps directory listing Click [Here](%s%s)" "https://ipfs.io" "$(cat "${{ env.IPNS_HASH_OUTPUT_FILE }}" )" > README.md
        
      - name: setup git config
        run: |
          git config user.name "LG Actions Bot"
          git config user.email "<lg@lg.lg>"
        
      - name: git pull
        run: git pull
      - name: git add
        run: git add -f README.md "${{ env.IPNS_HASH_OUTPUT_FILE }}" "${{ env.WEB_PAGE_CIDS_OUTPUT_FILE }}" "${{ env.WEB_PAGE_OUTPUT_FILE }}" "${{ env.MAIN_CSV_OUTPUT }}" "${{ env.COMPACT_CSV_OUTPUT }}"
      - name: git commit
        run: git commit -m "auto update at $(date)"
      - name: git push
        run: git push
